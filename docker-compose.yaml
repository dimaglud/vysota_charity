version: "3.9"
services:

  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ./frontend/public/:/var/www/html/:ro
    networks:
      - vc-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - vc-network

#   frontend:
#     container_name: frontend
#     build:
#       context: ./frontend
#     restart: always
#     env_file: .env
#     ports:
#       - "${FRONTEND_PORT}:${FRONTEND_PORT}"
#     volumes:
#       - "./frontend/src:/usr/src/app/src"
#     networks:
#       - vc-network
#     command: "npm start"

  backend:
    container_name: backend
    build:
      context: ./backend
    restart: always
    env_file: .env
    volumes:
      - ./backend:/svr/app
      - /svr/app/node_modules
    networks:
      - vc-network
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - vc-pg-db
    links:
      - vc-pg-db

  vc-pg-db:
    image: postgres:16-alpine
    restart: always
    container_name: vc-pg-db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - vc-network

  pgadmin-portal:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-portal
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - vc-pg-db
    networks:
      - vc-network

volumes:
  pgdata:
  pgadmin:
networks:
  vc-network:
    driver: bridge
